{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CommentListItem from \"@/components/qna/item/CommentListItem.vue\";\nexport default {\n  components: {\n    CommentListItem: CommentListItem\n  },\n  data: function data() {\n    return {\n      questionForm: {\n        questionId: \"\",\n        title: \"\",\n        content: \"\",\n        author: \"ssafy\",\n        // 나중에 수정\n        createDate: \"\"\n      },\n      commentForm: {\n        questionId: 0,\n        author: \"ssafy\",\n        // 나중에 수정\n        content: \"\",\n        createDate: \"\"\n      },\n      comments: {},\n      lengthMsg: \"총 0개의 댓글이 있습니다.\"\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$axios.get(\"/qnas/\".concat(this.$route.params.questionId)).then(function (_ref) {\n      var data = _ref.data;\n      console.log(data);\n      _this.questionForm.questionId = data.questionId;\n      _this.questionForm.title = data.title;\n      _this.questionForm.content = data.content;\n      _this.questionForm.author = data.author;\n      _this.questionForm.createDate = data.createDate;\n      _this.comments = data.answers;\n      _this.lengthMsg = \"\\uCD1D \".concat(_this.comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\");\n    });\n  },\n  methods: {\n    goModifyQuestion: function goModifyQuestion() {\n      this.$router.push({\n        name: \"QuestionModify\",\n        params: this.questionForm.questionId\n      });\n    },\n    deleteQuestion: function deleteQuestion() {\n      var _this2 = this;\n\n      this.$swal.fire({\n        title: \"정말 삭제하시겠습니까?\",\n        text: \"삭제를 원하시면 OK를 클릭해주세요.\",\n        icon: \"warning\",\n        closeOnClickOutSide: false,\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"OK\",\n        cancelButtonText: \"취소\"\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          _this2.$axios.delete(\"/qnas/question/\".concat(_this2.questionForm.questionId)).then(function () {\n            _this2.sweetAlert(\"success\", true);\n\n            _this2.goList();\n          }).catch(function () {\n            return _this2.sweetAlert(\"fail\", true);\n          });\n        }\n      });\n    },\n    goList: function goList() {\n      this.$router.push(\"/qna\");\n    },\n    addComment: function addComment() {\n      var _this3 = this;\n\n      var commentInfo = {\n        questionId: this.questionForm.questionId,\n        author: this.commentForm.author,\n        content: this.commentForm.content\n      };\n      this.$axios.post(\"/qnas/answer\", commentInfo).then(function () {\n        _this3.comments.push(commentInfo);\n\n        location.reload();\n      }).catch(function () {\n        _this3.sweetAlert(\"fail\", false);\n      });\n    },\n    sweetAlert: function sweetAlert(type, isQuestion) {\n      if (isQuestion) {\n        if (type === \"success\") this.$swal(type, \"문의가 삭제되었습니다.\", \"success\");else this.$swal(type, \"삭제 중 문제가 발생하였습니다.\", \"error\");\n      } else {\n        if (type === \"success\") this.$swal(type, \"댓글이 등록되었습니다.\", \"success\");else this.$swal(type, \"등록 중 문제가 발생하였습니다.\", \"error\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;EACAA;IACAC;EADA,CADA;EAIAC,IAJA,kBAIA;IACA;MACAC;QACAC,cADA;QAEAC,SAFA;QAGAC,WAHA;QAIAC,eAJA;QAIA;QACAC;MALA,CADA;MAQAC;QACAL,aADA;QAEAG,eAFA;QAEA;QACAD,WAHA;QAIAE;MAJA,CARA;MAcAE,YAdA;MAeAC;IAfA;EAiBA,CAtBA;EAuBAC,OAvBA,qBAuBA;IAAA;;IACA,YACAC,GADA,iBACA,6BADA,GAEAC,IAFA,CAEA;MAAA;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAXA;EAYA,CApCA;EAqCAC;IACAC,gBADA,8BACA;MACA;QACAC,sBADA;QAEAC;MAFA;IAIA,CANA;IAOAC,cAPA,4BAOA;MAAA;;MACA,WACAC,IADA,CACA;QACAhB,qBADA;QAEAiB,4BAFA;QAGAC,eAHA;QAIAC,0BAJA;QAKAC,sBALA;QAMAC,6BANA;QAOAC,yBAPA;QAQAC,uBARA;QASAC;MATA,CADA,EAYAf,IAZA,CAYA;QACA;UACA,cACAgB,MADA,0BACA,8BADA,GAEAhB,IAFA,CAEA;YACA;;YACA;UACA,CALA,EAMAiB,KANA,CAMA;YAAA;UAAA,CANA;QAOA;MACA,CAtBA;IAuBA,CA/BA;IAgCAC,MAhCA,oBAgCA;MACA;IACA,CAlCA;IAmCAC,UAnCA,wBAmCA;MAAA;;MACA;QACA7B,wCADA;QAEAG,+BAFA;QAGAD;MAHA;MAKA,YACA4B,IADA,CACA,cADA,EACAC,WADA,EAEArB,IAFA,CAEA;QACA;;QACAsB;MACA,CALA,EAMAL,KANA,CAMA;QACA;MACA,CARA;IASA,CAlDA;IAmDAM,UAnDA,sBAmDAC,IAnDA,EAmDAC,UAnDA,EAmDA;MACA;QACA,wBACA,4CADA,KAEA;MACA,CAJA,MAIA;QACA,wBACA,4CADA,KAEA;MACA;IACA;EA7DA;AArCA","names":["components","CommentListItem","data","questionForm","questionId","title","content","author","createDate","commentForm","comments","lengthMsg","created","get","then","console","methods","goModifyQuestion","name","params","deleteQuestion","fire","text","icon","closeOnClickOutSide","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","delete","catch","goList","addComment","post","commentInfo","location","sweetAlert","type","isQuestion"],"sourceRoot":"src/components/qna","sources":["QuestionDetail.vue"],"sourcesContent":["<template>\r\n  <article id=\"main\">\r\n    <header>\r\n      <h2>Q&A</h2>\r\n      <p>문의 조회</p>\r\n    </header>\r\n    <section class=\"wrapper style5\">\r\n      <div class=\"inner\">\r\n        <header>\r\n          <h2>{{ questionForm.title }}</h2>\r\n        </header>\r\n        <p>{{ questionForm.author }} | {{ questionForm.createDate }}</p>\r\n        <hr />\r\n        <pre>{{ questionForm.content }}</pre>\r\n        <div class=\"row gtr-uniform aln-center\">\r\n          <div></div>\r\n          <div class=\"col-6\">\r\n            <ul class=\"actions\">\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"primary\"\r\n                  id=\"modifyBtn\"\r\n                  @click=\"goModifyQuestion\"\r\n                >\r\n                  수정\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"button\"\r\n                  id=\"deleteQuestionBtn\"\r\n                  @click=\"deleteQuestion\"\r\n                >\r\n                  삭제\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"button\"\r\n                  id=\"goListBtn\"\r\n                  @click=\"goList\"\r\n                >\r\n                  목록\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <textarea\r\n            class=\"ta\"\r\n            name=\"comment\"\r\n            id=\"comment\"\r\n            placeholder=\"Enter comment\"\r\n            rows=\"3\"\r\n            required\r\n            v-model=\"commentForm.content\"\r\n          ></textarea>\r\n          <div style=\"float: right\">\r\n            <button type=\"button\" class=\"button small\" @click=\"addComment\">\r\n              등록\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br /><br />\r\n        <h4>{{ lengthMsg }}</h4>\r\n        <ul class=\"alt\">\r\n          <comment-list-item\r\n            v-for=\"comment in comments\"\r\n            :key=\"comment.answerId\"\r\n            v-bind=\"comment\"\r\n          />\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  </article>\r\n</template>\r\n\r\n<script>\r\nimport CommentListItem from \"@/components/qna/item/CommentListItem.vue\";\r\nexport default {\r\n  components: {\r\n    CommentListItem,\r\n  },\r\n  data() {\r\n    return {\r\n      questionForm: {\r\n        questionId: \"\",\r\n        title: \"\",\r\n        content: \"\",\r\n        author: \"ssafy\", // 나중에 수정\r\n        createDate: \"\",\r\n      },\r\n      commentForm: {\r\n        questionId: 0,\r\n        author: \"ssafy\", // 나중에 수정\r\n        content: \"\",\r\n        createDate: \"\",\r\n      },\r\n      comments: {},\r\n      lengthMsg: \"총 0개의 댓글이 있습니다.\",\r\n    };\r\n  },\r\n  created() {\r\n    this.$axios\r\n      .get(`/qnas/${this.$route.params.questionId}`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        this.questionForm.questionId = data.questionId;\r\n        this.questionForm.title = data.title;\r\n        this.questionForm.content = data.content;\r\n        this.questionForm.author = data.author;\r\n        this.questionForm.createDate = data.createDate;\r\n        this.comments = data.answers;\r\n        this.lengthMsg = `총 ${this.comments.length}개의 댓글이 있습니다.`;\r\n      });\r\n  },\r\n  methods: {\r\n    goModifyQuestion() {\r\n      this.$router.push({\r\n        name: \"QuestionModify\",\r\n        params: this.questionForm.questionId,\r\n      });\r\n    },\r\n    deleteQuestion() {\r\n      this.$swal\r\n        .fire({\r\n          title: \"정말 삭제하시겠습니까?\",\r\n          text: \"삭제를 원하시면 OK를 클릭해주세요.\",\r\n          icon: \"warning\",\r\n          closeOnClickOutSide: false,\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"OK\",\r\n          cancelButtonText: \"취소\",\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.$axios\r\n              .delete(`/qnas/question/${this.questionForm.questionId}`)\r\n              .then(() => {\r\n                this.sweetAlert(\"success\", true);\r\n                this.goList();\r\n              })\r\n              .catch(() => this.sweetAlert(\"fail\", true));\r\n          }\r\n        });\r\n    },\r\n    goList() {\r\n      this.$router.push(\"/qna\");\r\n    },\r\n    addComment() {\r\n      let commentInfo = {\r\n        questionId: this.questionForm.questionId,\r\n        author: this.commentForm.author,\r\n        content: this.commentForm.content,\r\n      };\r\n      this.$axios\r\n        .post(\"/qnas/answer\", commentInfo)\r\n        .then(() => {\r\n          this.comments.push(commentInfo);\r\n          location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.sweetAlert(\"fail\", false);\r\n        });\r\n    },\r\n    sweetAlert(type, isQuestion) {\r\n      if (isQuestion) {\r\n        if (type === \"success\")\r\n          this.$swal(type, \"문의가 삭제되었습니다.\", \"success\");\r\n        else this.$swal(type, \"삭제 중 문제가 발생하였습니다.\", \"error\");\r\n      } else {\r\n        if (type === \"success\")\r\n          this.$swal(type, \"댓글이 등록되었습니다.\", \"success\");\r\n        else this.$swal(type, \"등록 중 문제가 발생하였습니다.\", \"error\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _construct from \"C:/Users/USER/Documents/happyhouse_frontend/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _toConsumableArray from \"C:/Users/USER/Documents/happyhouse_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"KakaoMap\",\n  data: function data() {\n    return {\n      markerPositions1: [[33.452278, 126.567803], [33.452671, 126.574792], [33.451744, 126.572441]],\n      markerPositions2: [[37.499590490909185, 127.0263723554437], [37.499427948430814, 127.02794423197847], [37.498553760499505, 127.02882598822454], [37.497625593121384, 127.02935713582038], [37.49629291770947, 127.02587362608637], [37.49754540521486, 127.02546694890695], [37.49646391248451, 127.02675574250912]],\n      markers: [],\n      infowindow: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      var script = document.createElement(\"script\");\n      /* global kakao */\n\n      script.onload = function () {\n        return kakao.maps.load(_this.initMap);\n      };\n\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=\".concat(process.env.VUE_APP_KAKAOMAP_KEY);\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap: function initMap() {\n      var container = document.getElementById(\"map\");\n      var options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 5\n      }; //지도 객체를 등록합니다.\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\n\n      this.map = new kakao.maps.Map(container, options);\n    },\n    displayMarker: function displayMarker(markerPositions) {\n      var _this2 = this;\n\n      if (this.markers.length > 0) {\n        this.markers.forEach(function (marker) {\n          return marker.setMap(null);\n        });\n      }\n\n      var positions = markerPositions.map(function (position) {\n        return _construct(kakao.maps.LatLng, _toConsumableArray(position));\n      });\n\n      if (positions.length > 0) {\n        this.markers = positions.map(function (position) {\n          return new kakao.maps.Marker({\n            map: _this2.map,\n            position: position\n          });\n        });\n        var bounds = positions.reduce(function (bounds, latlng) {\n          return bounds.extend(latlng);\n        }, new kakao.maps.LatLngBounds());\n        this.map.setBounds(bounds);\n      }\n    },\n    displayInfoWindow: function displayInfoWindow() {\n      if (this.infowindow && this.infowindow.getMap()) {\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\n        this.map.setCenter(this.infowindow.getPosition());\n        return;\n      }\n\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>',\n          // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n      iwPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n          //인포윈도우 표시 위치입니다\n      iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        map: this.map,\n        // 인포윈도우가 표시될 지도\n        position: iwPosition,\n        content: iwContent,\n        removable: iwRemoveable\n      });\n      this.map.setCenter(iwPosition);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAaA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,mBACA,uBADA,EAEA,uBAFA,EAGA,uBAHA,CADA;MAMAC,mBACA,uCADA,EAEA,wCAFA,EAGA,wCAHA,EAIA,wCAJA,EAKA,uCALA,EAMA,uCANA,EAOA,uCAPA,CANA;MAeAC,WAfA;MAgBAC;IAhBA;EAkBA,CArBA;EAsBAC,OAtBA,qBAsBA;IAAA;;IACA;MACA;IACA,CAFA,MAEA;MACA;MACA;;MACAC;QAAA;MAAA;;MACAA;MACAC;IACA;EACA,CAhCA;EAiCAC;IACAC,OADA,qBACA;MACA;MACA;QACAC,oDADA;QAEAC;MAFA,EAFA,CAOA;MACA;;MACA;IACA,CAXA;IAaAC,aAbA,yBAaAC,eAbA,EAaA;MAAA;;MACA;QACA;UAAA;QAAA;MACA;;MAEA,oCACA;QAAA;MAAA,CADA;;MAIA;QACA,6BACA;UAAA,OACA;YACAC,eADA;YAEAC;UAFA,EADA;QAAA,CADA;QAQA,8BACA;UAAA;QAAA,CADA,EAEA,6BAFA;QAKA;MACA;IACA,CAtCA;IAuCAC,iBAvCA,+BAuCA;MACA;QACA;QACA;QACA;MACA;;MAEA;MAAA;MACAC,yDADA;MAAA,IACA;MACAC,mBAFA,CAPA,CASA;;MAEA;QACAJ,aADA;QACA;QACAC,oBAFA;QAGAI,kBAHA;QAIAC;MAJA;MAOA;IACA;EA1DA;AAjCA","names":["name","data","markerPositions1","markerPositions2","markers","infowindow","mounted","script","document","methods","initMap","center","level","displayMarker","markerPositions","map","position","displayInfoWindow","iwPosition","iwRemoveable","content","removable"],"sourceRoot":"src/components/trade","sources":["TradeSearch.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\"></div>\r\n    <div class=\"button-group\">\r\n      <button @click=\"displayMarker(markerPositions1)\">marker set 1</button>\r\n      <button @click=\"displayMarker(markerPositions2)\">marker set 2</button>\r\n      <button @click=\"displayMarker([])\">marker set 3 (empty)</button>\r\n      <button @click=\"displayInfoWindow\">infowindow</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"KakaoMap\",\r\n  data() {\r\n    return {\r\n      markerPositions1: [\r\n        [33.452278, 126.567803],\r\n        [33.452671, 126.574792],\r\n        [33.451744, 126.572441],\r\n      ],\r\n      markerPositions2: [\r\n        [37.499590490909185, 127.0263723554437],\r\n        [37.499427948430814, 127.02794423197847],\r\n        [37.498553760499505, 127.02882598822454],\r\n        [37.497625593121384, 127.02935713582038],\r\n        [37.49629291770947, 127.02587362608637],\r\n        [37.49754540521486, 127.02546694890695],\r\n        [37.49646391248451, 127.02675574250912],\r\n      ],\r\n      markers: [],\r\n      infowindow: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src = `//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=${process.env.VUE_APP_KAKAOMAP_KEY}`;\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 5,\r\n      };\r\n\r\n      //지도 객체를 등록합니다.\r\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\r\n      this.map = new kakao.maps.Map(container, options);\r\n    },\r\n\r\n    displayMarker(markerPositions) {\r\n      if (this.markers.length > 0) {\r\n        this.markers.forEach((marker) => marker.setMap(null));\r\n      }\r\n\r\n      const positions = markerPositions.map(\r\n        (position) => new kakao.maps.LatLng(...position)\r\n      );\r\n\r\n      if (positions.length > 0) {\r\n        this.markers = positions.map(\r\n          (position) =>\r\n            new kakao.maps.Marker({\r\n              map: this.map,\r\n              position,\r\n            })\r\n        );\r\n\r\n        const bounds = positions.reduce(\r\n          (bounds, latlng) => bounds.extend(latlng),\r\n          new kakao.maps.LatLngBounds()\r\n        );\r\n\r\n        this.map.setBounds(bounds);\r\n      }\r\n    },\r\n    displayInfoWindow() {\r\n      if (this.infowindow && this.infowindow.getMap()) {\r\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\r\n        this.map.setCenter(this.infowindow.getPosition());\r\n        return;\r\n      }\r\n\r\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n        iwPosition = new kakao.maps.LatLng(33.450701, 126.570667), //인포윈도우 표시 위치입니다\r\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n\r\n      this.infowindow = new kakao.maps.InfoWindow({\r\n        map: this.map, // 인포윈도우가 표시될 지도\r\n        position: iwPosition,\r\n        content: iwContent,\r\n        removable: iwRemoveable,\r\n      });\r\n\r\n      this.map.setCenter(iwPosition);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n  width: 1500px;\r\n  height: 900px;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"CommentListItem\",\n  props: {\n    answerId: Number,\n    author: String,\n    content: String,\n    createDate: String,\n    questionId: Number\n  }\n  /*data() {\r\n    return {\r\n      comments: [],\r\n      commentForm: {\r\n        questionId: 0,\r\n        author: \"ssafy\", // 나중에 수정\r\n        content: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.$axios.get(`/qnas`).then(({ data }) => {\r\n      this.questions = data;\r\n    });\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      let commentInfo = {\r\n        questionId: this.$route.params.questionId,\r\n        author: this.commentForm.author,\r\n        content: this.commentForm.content,\r\n      };\r\n      console.log(commentInfo);\r\n      this.$axios\r\n        .post(\"/qnas/answer\", commentInfo)\r\n        .then(() => {\r\n          alert(\"등록 성공\");\r\n          this.comments.push(commentInfo);\r\n        })\r\n        .catch(() => {\r\n          alert(\"등록 실패\");\r\n        });\r\n    },\r\n  },*/\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;EACAA,uBADA;EAEAC;IACAC,gBADA;IAEAC,cAFA;IAGAC,eAHA;IAIAC,kBAJA;IAKAC;EALA;EAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1CA","names":["name","props","answerId","author","content","createDate","questionId"],"sourceRoot":"src/components/qna/item","sources":["CommentListItem.vue"],"sourcesContent":["<template>\r\n  <li>\r\n    {{ author }} | {{ createDate }}<br /><br />\r\n\r\n    {{ content }}\r\n  </li>\r\n  <!--<hr />\r\n    <div>\r\n      <textarea\r\n        class=\"ta\"\r\n        name=\"content\"\r\n        id=\"content\"\r\n        placeholder=\"Enter comment\"\r\n        rows=\"3\"\r\n        v-model=\"commentForm.content\"\r\n        required\r\n      ></textarea>\r\n      <div style=\"float: right\">\r\n        <button type=\"button\" class=\"button small\" @click=\"addComment\">\r\n          등록\r\n        </button>\r\n      </div>\r\n      <br /><br />\r\n      <section>\r\n        <h4>comments</h4>\r\n        <div class=\"row\">\r\n          <div class=\"col-6 col-12-medium\">\r\n            <h5>총 -개의 댓글이 있습니다.</h5>\r\n            <ul class=\"alt\">\r\n              <li v-for=\"comment in comments\" :key=\"comment.answerId\">\r\n                <hr />\r\n                {{ comment.author }} | {{ comment.createDate }}\r\n                {{ comment.content }}\r\n                <hr />\r\n              </li>\r\n              <li>Dolor pulvinar etiam.</li>\r\n              <li>Sagittis adipiscing.</li>\r\n              <li>Felis enim feugiat.</li> \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>-->\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CommentListItem\",\r\n  props: {\r\n    answerId: Number,\r\n    author: String,\r\n    content: String,\r\n    createDate: String,\r\n    questionId: Number,\r\n  },\r\n  /*data() {\r\n    return {\r\n      comments: [],\r\n      commentForm: {\r\n        questionId: 0,\r\n        author: \"ssafy\", // 나중에 수정\r\n        content: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.$axios.get(`/qnas`).then(({ data }) => {\r\n      this.questions = data;\r\n    });\r\n  },\r\n  methods: {\r\n    addComment() {\r\n      let commentInfo = {\r\n        questionId: this.$route.params.questionId,\r\n        author: this.commentForm.author,\r\n        content: this.commentForm.content,\r\n      };\r\n      console.log(commentInfo);\r\n      this.$axios\r\n        .post(\"/qnas/answer\", commentInfo)\r\n        .then(() => {\r\n          alert(\"등록 성공\");\r\n          this.comments.push(commentInfo);\r\n        })\r\n        .catch(() => {\r\n          alert(\"등록 실패\");\r\n        });\r\n    },\r\n  },*/\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _construct from \"C:/Users/USER/Documents/happyhouse_frontend/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _toConsumableArray from \"C:/Users/USER/Documents/happyhouse_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"KakaoMap\",\n  data: function data() {\n    return {\n      markerPositions2: [[37.499590490909185, 127.0263723554437], [37.499427948430814, 127.02794423197847], [37.498553760499505, 127.02882598822454], [37.497625593121384, 127.02935713582038], [37.49629291770947, 127.02587362608637], [37.49754540521486, 127.02546694890695], [37.49646391248451, 127.02675574250912]],\n      markers: [],\n      infowindow: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    if (!(\"geolocation\" in navigator)) {\n      return;\n    } // get position\n\n\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      _this.latitude = pos.coords.latitude;\n      _this.longitude = pos.coords.longitude;\n\n      if (window.kakao && window.kakao.maps) {\n        _this.initMap();\n      } else {\n        var script = document.createElement(\"script\");\n        /* global kakao */\n\n        script.onload = function () {\n          return kakao.maps.load(_this.initMap);\n        };\n\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=\".concat(process.env.VUE_APP_KAKAOMAP_KEY);\n        document.head.appendChild(script);\n      }\n    }, function (err) {\n      alert(err.message);\n    });\n  },\n  methods: {\n    initMap: function initMap() {\n      var container = document.getElementById(\"map\");\n      var options = {\n        center: new kakao.maps.LatLng(this.latitude, this.longitude),\n        level: 5\n      }; //지도 객체를 등록\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언\n\n      this.map = new kakao.maps.Map(container, options);\n    },\n    displayMarker: function displayMarker(markerPositions) {\n      var _this2 = this;\n\n      // 1. 현재 표시되어 있는 marker들이 있다면 marker에 등록된 map을 없앤다.\n      if (this.markers.length > 0) {\n        this.markers.forEach(function (marker) {\n          return marker.setMap(null);\n        });\n      } // 마커의 위치\n\n\n      var positions = markerPositions.map(function (position) {\n        return _construct(kakao.maps.LatLng, _toConsumableArray(position));\n      });\n\n      var imgSrc = require(\"@/assets/map/house_icon5.png\");\n\n      var imgSize = new kakao.maps.Size(50, 50);\n      var markerImage = new kakao.maps.MarkerImage(imgSrc, imgSize);\n\n      if (positions.length > 0) {\n        this.markers = positions.map(function (position) {\n          return new kakao.maps.Marker({\n            map: _this2.map,\n            position: position,\n            image: markerImage\n          });\n        }); // 지도 이동시켜주기\n        // 배열.reduce((누적값, 현재값,인덱스,요소)=>{return 결과값}, 초기값)\n\n        var bounds = positions.reduce(function (bounds, latlng) {\n          return bounds.extend(latlng);\n        }, new kakao.maps.LatLngBounds());\n        this.map.setBounds(bounds);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAUA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,mBACA,uCADA,EAEA,wCAFA,EAGA,wCAHA,EAIA,wCAJA,EAKA,uCALA,EAMA,uCANA,EAOA,uCAPA,CADA;MAUAC,WAVA;MAWAC;IAXA;EAaA,CAhBA;EAiBAC,OAjBA,qBAiBA;IAAA;;IACA;MACA;IACA,CAHA,CAIA;;;IACAC,yCACA;MACA;MACA;;MAEA;QACA;MACA,CAFA,MAEA;QACA;QACA;;QACAC;UAAA;QAAA;;QACAA;QACAC;MACA;IACA,CAdA,EAeA;MACAC;IACA,CAjBA;EAmBA,CAzCA;EA0CAC;IACAC,OADA,qBACA;MACA;MACA;QACAC,4DADA;QAEAC;MAFA,EAFA,CAMA;MACA;;MACA;IACA,CAVA;IAWAC,aAXA,yBAWAC,eAXA,EAWA;MAAA;;MACA;MACA;QACA;UAAA;QAAA;MACA,CAJA,CAKA;;;MACA,oCACA;QAAA;MAAA,CADA;;MAGA;;MACA;MACA;;MACA;QACA,6BACA;UAAA,OACA;YACAC,eADA;YAEAC,kBAFA;YAGAC;UAHA,EADA;QAAA,CADA,EADA,CASA;QACA;;QACA,8BACA;UAAA;QAAA,CADA,EAEA,6BAFA;QAIA;MACA;IACA;EAxCA;AA1CA","names":["name","data","markerPositions2","markers","infowindow","created","navigator","script","document","alert","methods","initMap","center","level","displayMarker","markerPositions","map","position","image"],"sourceRoot":"src/components/trade","sources":["TradeSearch.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\"></div>\r\n    <div class=\"button-group\">\r\n      <button @click=\"displayMarker(markerPositions2)\">marker set 2</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"KakaoMap\",\r\n  data() {\r\n    return {\r\n      markerPositions2: [\r\n        [37.499590490909185, 127.0263723554437],\r\n        [37.499427948430814, 127.02794423197847],\r\n        [37.498553760499505, 127.02882598822454],\r\n        [37.497625593121384, 127.02935713582038],\r\n        [37.49629291770947, 127.02587362608637],\r\n        [37.49754540521486, 127.02546694890695],\r\n        [37.49646391248451, 127.02675574250912],\r\n      ],\r\n      markers: [],\r\n      infowindow: null,\r\n    };\r\n  },\r\n  created() {\r\n    if (!(\"geolocation\" in navigator)) {\r\n      return;\r\n    }\r\n    // get position\r\n    navigator.geolocation.getCurrentPosition(\r\n      (pos) => {\r\n        this.latitude = pos.coords.latitude;\r\n        this.longitude = pos.coords.longitude;\r\n\r\n        if (window.kakao && window.kakao.maps) {\r\n          this.initMap();\r\n        } else {\r\n          const script = document.createElement(\"script\");\r\n          /* global kakao */\r\n          script.onload = () => kakao.maps.load(this.initMap);\r\n          script.src = `//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=${process.env.VUE_APP_KAKAOMAP_KEY}`;\r\n          document.head.appendChild(script);\r\n        }\r\n      },\r\n      (err) => {\r\n        alert(err.message);\r\n      }\r\n    );\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(this.latitude, this.longitude),\r\n        level: 5,\r\n      };\r\n      //지도 객체를 등록\r\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언\r\n      this.map = new kakao.maps.Map(container, options);\r\n    },\r\n    displayMarker(markerPositions) {\r\n      // 1. 현재 표시되어 있는 marker들이 있다면 marker에 등록된 map을 없앤다.\r\n      if (this.markers.length > 0) {\r\n        this.markers.forEach((marker) => marker.setMap(null));\r\n      }\r\n      // 마커의 위치\r\n      const positions = markerPositions.map(\r\n        (position) => new kakao.maps.LatLng(...position)\r\n      );\r\n      const imgSrc = require(\"@/assets/map/house_icon5.png\");\r\n      const imgSize = new kakao.maps.Size(50, 50);\r\n      const markerImage = new kakao.maps.MarkerImage(imgSrc, imgSize);\r\n      if (positions.length > 0) {\r\n        this.markers = positions.map(\r\n          (position) =>\r\n            new kakao.maps.Marker({\r\n              map: this.map,\r\n              position,\r\n              image: markerImage,\r\n            })\r\n        );\r\n        // 지도 이동시켜주기\r\n        // 배열.reduce((누적값, 현재값,인덱스,요소)=>{return 결과값}, 초기값)\r\n        const bounds = positions.reduce(\r\n          (bounds, latlng) => bounds.extend(latlng),\r\n          new kakao.maps.LatLngBounds()\r\n        );\r\n        this.map.setBounds(bounds);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 710px;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}